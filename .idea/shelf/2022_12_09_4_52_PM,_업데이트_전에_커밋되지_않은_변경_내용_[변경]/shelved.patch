Index: test.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import face_recognition\nimport cv2\nimport camera\nimport os\nimport numpy as np\n\n\n#registration service\n\nentire_name = []\nprint('Enter \\'sign up\\' if you want to sign up and \\'log in\\' if you want to log in.')\nstr = (input())\nif str == 'sign up':\n    print('Please enter a name:')\n    a = input()\n    cap = cv2.VideoCapture(0)\n    if cap.isOpened():\n\n        while True:\n            ret, frame = cap.read()\n\n            if ret:\n                cv2.imshow('camera', frame)\n\n                if cv2.waitKey(1) != -1:\n                    cv2.imwrite('knowns/{}.jpg'.format(a), frame)\n                    break\n\n            else:\n                print('no frame')\n                break\n    else:\n        print('no camera!')\n    cap.release()\n    cv2.destroyAllWindows()\n\n\nelif str == 'log in':\n    print('Please look at the camera lens.')\n\n    class FaceRecog():\n        def __init__(self):\n\n            # Using OpenCV to capture from device 0. If you have trouble capturing\n            # from a webcam, comment the line below out and use a video file\n            # instead.\n            self.camera = camera.VideoCamera()\n\n            self.known_face_encodings = []\n            self.known_face_names = []\n\n            # Load sample pictures and learn how to recognize it.\n            dirname = 'knowns'\n            files = os.listdir(dirname)\n            for filename in files:\n                name, ext = os.path.splitext(filename)\n                if ext == '.jpg':\n                    self.known_face_names.append(name)\n                    entire_name.append(name)\n                    pathname = os.path.join(dirname, filename)\n                    img = face_recognition.load_image_file(pathname)\n                    face_encoding = face_recognition.face_encodings(img)[0]\n                    self.known_face_encodings.append(face_encoding)\n\n            # Initialize some variables\n            self.face_locations = []\n            self.face_encodings = []\n            self.face_names = []\n            self.process_this_frame = True\n\n        def __del__(self):\n            del self.camera\n\n        def get_frame(self):\n            # Grab a single frame of video\n            frame = self.camera.get_frame()\n\n            # Resize frame of video to 1/4 size for faster face recognition processing\n            small_frame = cv2.resize(frame, (0, 0), fx=0.25, fy=0.25)\n\n            # Convert the image from BGR color (which OpenCV uses) to RGB color (which face_recognition uses)\n            rgb_small_frame = small_frame[:, :, ::-1]\n\n            # Only process every other frame of video to save time\n            if self.process_this_frame:\n                # Find all the faces and face encodings in the current frame of video\n                self.face_locations = face_recognition.face_locations(rgb_small_frame)\n                self.face_encodings = face_recognition.face_encodings(rgb_small_frame, self.face_locations)\n\n                self.face_names = []\n                for face_encoding in self.face_encodings:\n                    # See if the face is a match for the known face(s)\n                    distances = face_recognition.face_distance(self.known_face_encodings, face_encoding)\n                    min_value = min(distances)\n\n                    # tolerance: How much distance between faces to consider it a match. Lower is more strict.\n                    # 0.6 is typical best performance.\n                    name = \"Unknown\"\n                    if min_value < 0.6:\n                        index = np.argmin(distances)\n                        name = self.known_face_names[index]\n\n                    self.face_names.append(name)\n\n            self.process_this_frame = not self.process_this_frame\n\n            # Display the results\n            for (top, right, bottom, left), name in zip(self.face_locations, self.face_names):\n                # Scale back up face locations since the frame we detected in was scaled to 1/4 size\n                top *= 4\n                right *= 4\n                bottom *= 4\n                left *= 4\n\n                # Draw a box around the face\n                cv2.rectangle(frame, (left, top), (right, bottom), (0, 0, 255), 2)\n\n                # Draw a label with a name below the face\n                cv2.rectangle(frame, (left, bottom - 35), (right, bottom), (0, 0, 255), cv2.FILLED)\n                font = cv2.FONT_HERSHEY_DUPLEX\n                cv2.putText(frame, name, (left + 6, bottom - 6), font, 1.0, (255, 255, 255), 1)\n\n            return frame\n\n        def get_jpg_bytes(self):\n            frame = self.get_frame()\n            # We are using Motion JPEG, but OpenCV defaults to capture raw images,\n            # so we must encode it into JPEG in order to correctly display the\n            # video stream.\n            ret, jpg = cv2.imencode('.jpg', frame)\n            return jpg.tobytes()\n\n\n    if __name__ == '__main__':\n        face_recog = FaceRecog()\n        print(face_recog.known_face_names)\n        print(entire_name)\n\n        print(\"enter your id\")\n        temp = input()\n\n        while True:\n            frame = face_recog.get_frame()\n\n            # show the frame\n            cv2.imshow(\"Frame\", frame)\n            key = cv2.waitKey(1) & 0xFF\n\n            # if the `q` key was pressed, break from the loop\n            if temp == entire_name:\n                tmpcamera = camera.VideoCamera()\n                break\n\n        # do a bit of cleanup\n        cv2.destroyAllWindows()\n        print('finish')\n\nelse:\n    print('You have been entered incorrectly. Please re-enter.')\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test.py b/test.py
--- a/test.py	(revision fe9d3eedb80941457ab37b10c93a678084d64536)
+++ b/test.py	(date 1670570715627)
@@ -4,15 +4,17 @@
 import os
 import numpy as np
 
-
 #registration service
 
 entire_name = []
+file = open("names.txt", "w")
 print('Enter \'sign up\' if you want to sign up and \'log in\' if you want to log in.')
 str = (input())
 if str == 'sign up':
     print('Please enter a name:')
-    a = input()
+    temp_name = input()
+    print('Please enter the phone number:')
+    temp_number = input()
     cap = cv2.VideoCapture(0)
     if cap.isOpened():
 
@@ -23,7 +25,7 @@
                 cv2.imshow('camera', frame)
 
                 if cv2.waitKey(1) != -1:
-                    cv2.imwrite('knowns/{}.jpg'.format(a), frame)
+                    cv2.imwrite('knowns/{}.jpg'.format(temp_name), frame)
                     break
 
             else:
@@ -141,14 +143,15 @@
 
         while True:
             frame = face_recog.get_frame()
+            compare_name = face_recog.name
 
             # show the frame
             cv2.imshow("Frame", frame)
             key = cv2.waitKey(1) & 0xFF
 
             # if the `q` key was pressed, break from the loop
-            if temp == entire_name:
-                tmpcamera = camera.VideoCamera()
+            if temp == compare_name:
+                print('Success to recognize!')
                 break
 
         # do a bit of cleanup
Index: face_recog.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># face_recog.py\n\nimport face_recognition\nimport cv2\nimport camera\nimport os\nimport numpy as np\n\nclass FaceRecog():\n    def __init__(self):\n        # Using OpenCV to capture from device 0. If you have trouble capturing\n        # from a webcam, comment the line below out and use a video file\n        # instead.\n        self.camera = camera.VideoCamera()\n\n        self.known_face_encodings = []\n        self.known_face_names = []\n\n        # Load sample pictures and learn how to recognize it.\n        dirname = 'knowns'\n        files = os.listdir(dirname)\n        for filename in files:\n            name, ext = os.path.splitext(filename)\n            if ext == '.jpg':\n                self.known_face_names.append(name)\n                pathname = os.path.join(dirname, filename)\n                img = face_recognition.load_image_file(pathname)\n                face_encoding = face_recognition.face_encodings(img)[0]\n                self.known_face_encodings.append(face_encoding)\n\n        # Initialize some variables\n        self.face_locations = []\n        self.face_encodings = []\n        self.face_names = []\n        self.process_this_frame = True\n\n    def __del__(self):\n        del self.camera\n\n    def get_frame(self):\n        # Grab a single frame of video\n        frame = self.camera.get_frame()\n\n        # Resize frame of video to 1/4 size for faster face recognition processing\n        small_frame = cv2.resize(frame, (0, 0), fx=0.25, fy=0.25)\n\n        # Convert the image from BGR color (which OpenCV uses) to RGB color (which face_recognition uses)\n        rgb_small_frame = small_frame[:, :, ::-1]\n\n        # Only process every other frame of video to save time\n        if self.process_this_frame:\n            # Find all the faces and face encodings in the current frame of video\n            self.face_locations = face_recognition.face_locations(rgb_small_frame)\n            self.face_encodings = face_recognition.face_encodings(rgb_small_frame, self.face_locations)\n\n            self.face_names = []\n            for face_encoding in self.face_encodings:\n                # See if the face is a match for the known face(s)\n                distances = face_recognition.face_distance(self.known_face_encodings, face_encoding)\n                min_value = min(distances)\n\n                # tolerance: How much distance between faces to consider it a match. Lower is more strict.\n                # 0.6 is typical best performance.\n                name = \"Unknown\"\n                if min_value < 0.6:\n                    index = np.argmin(distances)\n                    name = self.known_face_names[index]\n\n                self.face_names.append(name)\n\n        self.process_this_frame = not self.process_this_frame\n\n        # Display the results\n        for (top, right, bottom, left), name in zip(self.face_locations, self.face_names):\n            # Scale back up face locations since the frame we detected in was scaled to 1/4 size\n            top *= 4\n            right *= 4\n            bottom *= 4\n            left *= 4\n\n            # Draw a box around the face\n            cv2.rectangle(frame, (left, top), (right, bottom), (0, 0, 255), 2)\n\n            # Draw a label with a name below the face\n            cv2.rectangle(frame, (left, bottom - 35), (right, bottom), (0, 0, 255), cv2.FILLED)\n            font = cv2.FONT_HERSHEY_DUPLEX\n            cv2.putText(frame, name, (left + 6, bottom - 6), font, 1.0, (255, 255, 255), 1)\n\n        return frame\n\n    def get_jpg_bytes(self):\n        frame = self.get_frame()\n        # We are using Motion JPEG, but OpenCV defaults to capture raw images,\n        # so we must encode it into JPEG in order to correctly display the\n        # video stream.\n        ret, jpg = cv2.imencode('.jpg', frame)\n        return jpg.tobytes()\n\n\nif __name__ == '__main__':\n    face_recog = FaceRecog()\n    print(face_recog.known_face_names)\n    while True:\n        frame = face_recog.get_frame()\n\n        # show the frame\n        cv2.imshow(\"Frame\", frame)\n        key = cv2.waitKey(1) & 0xFF\n\n        # if the `q` key was pressed, break from the loop\n        if key == ord(\"q\"):\n            break\n\n    # do a bit of cleanup\n    cv2.destroyAllWindows()\n    print('finish')\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/face_recog.py b/face_recog.py
--- a/face_recog.py	(revision fe9d3eedb80941457ab37b10c93a678084d64536)
+++ b/face_recog.py	(date 1670571288692)
@@ -86,7 +86,7 @@
             font = cv2.FONT_HERSHEY_DUPLEX
             cv2.putText(frame, name, (left + 6, bottom - 6), font, 1.0, (255, 255, 255), 1)
 
-        return frame
+        return name
 
     def get_jpg_bytes(self):
         frame = self.get_frame()
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"8731968e-023f-487a-84d6-ad341a7e3652\" name=\"변경\" comment=\"youjin\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/test.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/test.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2I26PUg7BrmeK2gEwz2lWcF0dWJ\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;\n  }\n}</component>\n  <component name=\"RunManager\" selected=\"Python.test\">\n    <configuration name=\"camera\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\n      <module name=\"OS22_TermPoject_Team9\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$PROJECT_DIR$/../OS22_TermProject/venv/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/camera.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"face_recog\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\n      <module name=\"OS22_TermPoject_Team9\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$PROJECT_DIR$/../OS22_TermProject/venv/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/face_recog.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"OS22_TermPoject_Team9\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$PROJECT_DIR$/../OS22_TermProject/venv/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"test\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\n      <module name=\"OS22_TermPoject_Team9\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$PROJECT_DIR$/../OS22_TermProject/venv/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/test.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"test.oy\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\n      <module name=\"OS22_TermPoject_Team9\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$PROJECT_DIR$/../OS22_TermProject/venv/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/test.oy.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Python.camera\" />\n      <item itemvalue=\"Python.test.oy\" />\n      <item itemvalue=\"Python.face_recog\" />\n      <item itemvalue=\"Python.test\" />\n      <item itemvalue=\"Python.main\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"애플리케이션 수준\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"디폴트 작업\">\n      <changelist id=\"8731968e-023f-487a-84d6-ad341a7e3652\" name=\"변경\" comment=\"\" />\n      <created>1669367306312</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1669367306312</updated>\n      <workItem from=\"1669367307931\" duration=\"1461000\" />\n      <workItem from=\"1669368789203\" duration=\"1142000\" />\n      <workItem from=\"1669370430806\" duration=\"228000\" />\n      <workItem from=\"1669370670827\" duration=\"795000\" />\n      <workItem from=\"1669371473853\" duration=\"5948000\" />\n      <workItem from=\"1669687343007\" duration=\"20000\" />\n      <workItem from=\"1669687971995\" duration=\"349000\" />\n      <workItem from=\"1669699567553\" duration=\"511000\" />\n      <workItem from=\"1670168083581\" duration=\"643000\" />\n      <workItem from=\"1670173810285\" duration=\"640000\" />\n      <workItem from=\"1670561959384\" duration=\"2282000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"youjin\">\n      <created>1669367458217</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669367458217</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"youjin\">\n      <created>1669368369304</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669368369304</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"youjin\">\n      <created>1669369126675</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669369126675</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"youjin\">\n      <created>1669687981019</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669687981019</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"5\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"youjin\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"youjin\" />\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/OS22_TermPoject_Team9$test.coverage\" NAME=\"test 커버리지 결과\" MODIFIED=\"1670568404358\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n    <SUITE FILE_PATH=\"coverage/OS22_TermPoject_Team9$main.coverage\" NAME=\"main 커버리지 결과\" MODIFIED=\"1669688153698\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n    <SUITE FILE_PATH=\"coverage/OS22_TermPoject_Team9$camera.coverage\" NAME=\"camera 커버리지 결과\" MODIFIED=\"1669367416729\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n    <SUITE FILE_PATH=\"coverage/OS22_TermPoject_Team9$face_recog.coverage\" NAME=\"face_recog 커버리지 결과\" MODIFIED=\"1669371681309\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n    <SUITE FILE_PATH=\"coverage/OS22_TermPoject_Team9$test_oy.coverage\" NAME=\"test.oy 커버리지 결과\" MODIFIED=\"1669368166494\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fe9d3eedb80941457ab37b10c93a678084d64536)
+++ b/.idea/workspace.xml	(date 1670572329215)
@@ -2,7 +2,10 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="8731968e-023f-487a-84d6-ad341a7e3652" name="변경" comment="youjin">
+      <change afterPath="$PROJECT_DIR$/knowns/youjin.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/names.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/face_recog.py" beforeDir="false" afterPath="$PROJECT_DIR$/face_recog.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/test.py" beforeDir="false" afterPath="$PROJECT_DIR$/test.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -182,7 +185,7 @@
       <workItem from="1669699567553" duration="511000" />
       <workItem from="1670168083581" duration="643000" />
       <workItem from="1670173810285" duration="640000" />
-      <workItem from="1670561959384" duration="2282000" />
+      <workItem from="1670561959384" duration="5483000" />
     </task>
     <task id="LOCAL-00001" summary="youjin">
       <created>1669367458217</created>
@@ -235,7 +238,7 @@
     <option name="LAST_COMMIT_MESSAGE" value="youjin" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/OS22_TermPoject_Team9$test.coverage" NAME="test 커버리지 결과" MODIFIED="1670568404358" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/OS22_TermPoject_Team9$test.coverage" NAME="test 커버리지 결과" MODIFIED="1670570715632" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/OS22_TermPoject_Team9$main.coverage" NAME="main 커버리지 결과" MODIFIED="1669688153698" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/OS22_TermPoject_Team9$camera.coverage" NAME="camera 커버리지 결과" MODIFIED="1669367416729" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/OS22_TermPoject_Team9$face_recog.coverage" NAME="face_recog 커버리지 결과" MODIFIED="1669371681309" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
diff --git a/names.txt b/names.txt
new file mode 100644
